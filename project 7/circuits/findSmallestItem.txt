LOADMEM
# r3 reserved for return value, r4-r5 reserved for args, r6 reserved for sp, r7 reserved for ra
# r1, r2, and r7 are only stored by sp here

# main:
ori r1 15 # random value for sp testing
ori r2 213 # random value for sp testing

lw r6 r0 28 # initialize sp far enough from text segment
ori r4 29 # put address of length of array to arg 0
lw r5 r4 0 #put length of array to arg 1
jal 7
j 27 #exit

# findSmallestItem:

# stack pointer save
addi r6 3 #7
sw r7 r6 0
sw r1 r6 -1
sw r2 r6 -2

#initialize r1 and r2 to zero
cp r1 r0
cp r2 r0

# the calculation

lw r3 r4 1 #13
addi r4 1 # begin of loop
addi r1 1  # increment iterator
lw r2 r4 0
blt r2 r3 7
beq r5 r1 1 
j 14 # repeat loop

# stack pointer retrieve
lw r7 r6 0 #20
lw r1 r6 -1
lw r2 r6 -2
subi r6 3
jr r7 0 

# for blt
cp r3 r2 #25
j 18

CHECKMEM
r1: 15 # tests if r1 and r2 are successfully retrieved by sp
r2: 213
r3: 1011 # must be smallest item
pc: 27

DATAMEM #27
10000 # initial stack pointer value
10 # length of array
1029 # first item
3017
1426
1013
2031
2001
1011
1917
4721
9715 # last item
END
